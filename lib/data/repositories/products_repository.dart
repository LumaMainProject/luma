import 'package:cloud_firestore/cloud_firestore.dart';
import '../models/product.dart';

class ProductsRepository {
  final FirebaseFirestore firestore = FirebaseFirestore.instance;

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (–æ–¥–∏–Ω —Ä–∞–∑)
  Future<List<Product>> getProducts() async {
    final snapshot = await firestore.collection("products").get();
    return snapshot.docs
        .map((doc) => Product.fromJson(doc.data(), doc.id))
        .toList();
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –ø–æ id
  Future<Product?> getProduct(String id) async {
    final doc = await firestore.collection("products").doc(id).get();
    if (!doc.exists) return null;
    return Product.fromJson(doc.data()!, doc.id);
  }

  /// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
  Future<void> addProduct(Product product) async {
    await firestore
        .collection("products")
        .doc(product.id)
        .set(product.toJson());
  }

  /// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
  Future<void> updateProduct(Product product) async {
    await firestore
        .collection("products")
        .doc(product.id)
        .update(product.toJson());
  }

  /// –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
  Future<void> deleteProduct(String id) async {
    await firestore.collection("products").doc(id).delete();
  }

  /// üî• –†–µ–∞–∫—Ç–∏–≤–Ω—ã–π —Å—Ç—Ä–∏–º –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (–¥–ª—è Cubit)
  Stream<List<Product>> listenProducts() {
    return firestore.collection("products").snapshots().map(
          (snapshot) => snapshot.docs
              .map((doc) => Product.fromJson(doc.data(), doc.id))
              .toList(),
        );
  }
}
